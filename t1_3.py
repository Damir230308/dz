"""
Задание 3.
Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python
На каждый скрипт нужно два решения - исходное и оптимизированное.
Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler
Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler
Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.
ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.
Это файл для третьего скрипта
"""

from memory_profiler import profile

"""
В одномерном массиве целых чисел определить два наименьших элемента.
Они могут быть как равны между собой (оба являться минимальными),
так и различаться.
"""

@profile
def func():

    a = list(range(500000))

    min_num = a[0]
    min_num2 = a[1]

    if min_num > min_num2:
        min_num, min_num2 = min_num2, min_num

    for i in range(len(a)):
        if a[i] < min_num:
            min_num2 = min_num
            min_num = a[i]
        elif a[i] < min_num2:
            min_num2 = a[i]
    del a
    print("Два наименьших элемента:", min_num, min_num2)
    print(f"Два наименьших элемента: {min_num}, {min_num2}")


func()

'''
Удалил ссылку на список а до завершения алгоритма, и освободил 9.6 MiB 

Line #    Mem usage    Increment   Line Contents
================================================
    16     13.5 MiB     13.5 MiB   @profile
    17                             def func():
    18     23.1 MiB      9.6 MiB       a = list(range(500000))
    19
    20     23.1 MiB      0.0 MiB       min_num = a[0]
    21     23.1 MiB      0.0 MiB       min_num2 = a[1]
    22
    23     23.1 MiB      0.0 MiB       if min_num > min_num2:
    24                                     min_num, min_num2 
                                            = min_num2, min_num
    25
    26     23.2 MiB      0.0 MiB       for i in range(len(a)):
    27     23.2 MiB      0.0 MiB           if a[i] < min_num:
    28                                         min_num2 = min_num
    29                                         min_num = a[i]
    30     23.2 MiB      0.0 MiB           elif a[i] < min_num2:
    31     23.1 MiB      0.0 MiB               min_num2 = a[i]
    32
    33     23.2 MiB      0.0 MiB       print("Два наименьших элемента:", 
                                                    min_num, min_num2)
    34     13.8 MiB      0.0 MiB       del a
'''
